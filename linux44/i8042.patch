diff --git a/drivers/input/serio/i8042.c b/drivers/input/serio/i8042.c
index 4541957..82e7b03 100644
--- a/drivers/input/serio/i8042.c
+++ b/drivers/input/serio/i8042.c
@@ -140,6 +140,7 @@ static bool i8042_aux_irq_registered;
 static unsigned char i8042_suppress_kbd_ack;
 static struct platform_device *i8042_platform_device;
 static struct notifier_block i8042_kbd_bind_notifier_block;
+static bool i8042_noselftest;
 
 static irqreturn_t i8042_interrupt(int irq, void *dev_id);
 static bool (*i8042_platform_filter)(unsigned char data, unsigned char str,
@@ -891,6 +892,13 @@ static int i8042_controller_selftest(void)
 	int i = 0;
 
 	/*
+	 * On some hardware just running the self test causes problems.
+	 * In that case, don't run the test and just assume success.
+	 */
+	if (i8042_noselftest)
+		return 0;
+
+	/*
 	 * We try this 5 times; on some really fragile systems this does not
 	 * take the first time...
 	 */
@@ -1547,6 +1555,16 @@ static int i8042_remove(struct platform_device *dev)
 	return 0;
 }
 
+static const struct dmi_system_id i8042_dmi_noselftest_table[] __initconst = {
+	{
+		.matches = {
+			DMI_MATCH(DMI_SYS_VENDOR, "ASUSTeK COMPUTER INC."),
+			DMI_MATCH(DMI_PRODUCT_NAME, "X455LB"),
+		},
+	},
+	{}
+};
+
 static struct platform_driver i8042_driver = {
 	.driver		= {
 		.name	= "i8042",
@@ -1568,6 +1586,8 @@ static int __init i8042_init(void)
 	int err;
 
 	dbg_init();
+	if (dmi_check_system(i8042_dmi_noselftest_table))
+		i8042_noselftest = true;
 
 	err = i8042_platform_init();
 	if (err)
